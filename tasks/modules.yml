---

- name: Download modules
  unarchive:
    src: '{{ item.url }}'
    dest: '{{ nginx_src_build_path}}/{{  item.name }}'
    remote_src: yes
    extra_opts: '--strip-components=1'
  with_items: '{{ nginx_src_modules }}'

- name: Download modules libs (if any)
  unarchive:
    src: '{{ item.url }}'
    dest: '{{ nginx_src_build_path}}/{{  item.name }}'
    remote_src: yes
    extra_opts: '--strip-components=1'
  with_items: '{{ nginx_src_libs }}'

- name: Download modules deps (if any)
  unarchive:
    src: '{{ item.1.url }}'
    dest: '{{ nginx_src_build_path }}/{{ item.0.name }}/{{ item.1.name }}'
    remote_src: yes
    extra_opts: '--strip-components=1'
  with_subelements:
    - '{{ nginx_src_modules }}'
    - deps
    - skip_missing: true

- name: Modify debian rules to build with modules
  lineinfile:
    path: '{{ nginx_src_build_path }}/nginx-{{ nginx_src_version }}/debian/rules'
    regexp: 'CFLAGS="(.+?)\.\/configure(.+?)-\-\prefix=(.+?){{ item }}$'
    line: 'CFLAGS="{{ nginx_src_cc_opt }}" LDFLAGS="{{ nginx_src_ld_opt }}" ./configure {{ _nginx_src_args }} --prefix=\3{{item}}'
    backrefs: yes
  with_items:
    - '"'
    - "debug"

- name: Modify debian rules to cleanup build folders
  lineinfile:
    path: '{{ nginx_src_build_path }}/nginx-{{ nginx_src_version }}/debian/rules'
    regexp: '(.+?)rm \-r?f \$\(CURDIR\)\/objs$'
    line: '\1rm -rf $(CURDIR)/objs'
    backrefs: yes

- name: Modify debian rules to ignore dh_shlibdeps
  lineinfile:
    path: '{{ nginx_src_build_path }}/nginx-{{ nginx_src_version }}/debian/rules'
    regexp: '(.+?)dh_shlibdeps \-a(.+)?$'
    line: '\1dh_shlibdeps --dpkg-shlibdeps-params=--ignore-missing-info'
    backrefs: yes
